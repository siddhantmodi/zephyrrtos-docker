ARG BASE_IMAGE
FROM ${BASE_IMAGE:-ghcr.io/mistywest/zephyr-ci:amd64}

ARG JLINK_VERSION=812d
ARG NORDIC_COMMAND_LINE_TOOLS_VERSION="10-24-2/nrf-command-line-tools-10.24.2"
ARG arch=amd64

USER root

# Install udev and git
RUN apt update && \
    apt -y install screen git curl

# JLink Tools
RUN <<EOT
    JLINK_BASE=https://www.segger.com/downloads/jlink
    echo "Host architecture: $arch"
    case $arch in
        "amd64")
            JLINK_URL="${JLINK_BASE}/JLink_Linux_V${JLINK_VERSION}_x86_64.tgz"
            ;;
        "arm64")
            JLINK_URL="${JLINK_BASE}/$JLink_Linux_V${JLINK_VERSION}_arm64.tgz"
            ;;
    esac
    if [ ! -z "$JLINK_URL" ]; then
        mkdir -p /opt/SEGGER/JLink
        curl -L -o /opt/SEGGER/JLink.tgz -J -d "accept_license_agreement=accepted" -d "submit=Download software" "${JLINK_URL}"
        tar -xzf /opt/SEGGER/JLink.tgz -C /opt/SEGGER/JLink --strip-components=1
        rm /opt/SEGGER/JLink.tgz
        chown -R $USERNAME:$USERNAME /opt/SEGGER
    else
        echo "Skipping JLink Tools (not available for $arch)" ;
    fi
EOT

# Nordic command line tools
# Releases: https://www.nordicsemi.com/Products/Development-tools/nrf-command-line-tools/download
RUN <<EOT
    NCLT_BASE=https://nsscprodmedia.blob.core.windows.net/prod/software-and-other-downloads/desktop-software/nrf-command-line-tools/sw/versions-10-x-x
    echo "Host architecture: $arch"
    case $arch in
        "amd64")
            NCLT_URL="${NCLT_BASE}/${NORDIC_COMMAND_LINE_TOOLS_VERSION}_linux-amd64.tar.gz"
            ;;
        "arm64")
            NCLT_URL="${NCLT_BASE}/${NORDIC_COMMAND_LINE_TOOLS_VERSION}_linux-arm64.tar.gz"
            ;;
    esac
    echo "NCLT_URL=${NCLT_URL}"
    if [ ! -z "$NCLT_URL" ]; then
        mkdir -p tmp && cd tmp
        wget -qO - "${NCLT_URL}" | tar --no-same-owner -xz
        # Install nrf-command-line-tools
        cp -r ./nrf-command-line-tools /opt
        ln -s /opt/nrf-command-line-tools/bin/nrfjprog /usr/local/bin/nrfjprog
        ln -s /opt/nrf-command-line-tools/bin/mergehex /usr/local/bin/mergehex
        cd .. && rm -rf tmp ;
    else
        echo "Skipping nRF Command Line Tools (not available for $arch)" ;
    fi
EOT

# Make nrfutil install in a shared location, because when used with GitHub
# Actions, the image will be launched with the home dir mounted from the local
# checkout.
RUN <<EOT
    wget -q https://developer.nordicsemi.com/.pc-tools/nrfutil/x64-linux/nrfutil
    mv nrfutil /usr/local/bin
    chmod +x /usr/local/bin/nrfutil
    rm -f /root/ncs/downloads/*
EOT

# Run the Zephyr SDK setup script as 'user' in order to ensure that the
# `Zephyr-sdk` CMake package is located in the package registry under the
# user's home directory.
USER $USERNAME
WORKDIR /home/$USERNAME

# Install nrfutil device runner tool
RUN nrfutil install device

# Install STM32 SVD files
RUN git clone -n --depth=1 https://github.com/modm-io/cmsis-svd-stm32
ENV SVD_DIR=/home/${USERNAME}/cmsis-svd-stm32

ENV XDG_CACHE_HOME=/home/${USERNAME}/.cache
ENV PATH="${ZEPHYR_SDK}/sysroots/x86_64-pokysdk-linux/usr/bin:${PATH}"
ENV PATH="/opt/SEGGER/JLink:${PATH}"

WORKDIR /home/$USERNAME/workspace
