# Declare the ARG before using it in the FROM line
ARG CI_BASE_VERSION="v0.28.4"

# https://github.com/zephyrproject-rtos/docker-image/tree/main
FROM ghcr.io/zephyrproject-rtos/ci-base:${CI_BASE_VERSION}

# Args from devcontainer.json (local build) or GitHub workflow (CI) (or default)
ARG USERNAME="user"
ARG TOOLCHAIN="arm-zephyr-eabi"
ARG ZSDK_VERSION="0.17.4"
ARG arch=amd64

ENV USERNAME=${USERNAME}
ENV WGET_ARGS="-q --show-progress --progress=bar:force:noscroll"
ENV TOOLCHAIN=$TOOLCHAIN
ENV ZEPHYR_SDK_DIR="/opt"
ENV ZEPHYR_TOOLCHAIN_VARIANT=zephyr
ENV ZEPHYR_SDK_VERSION=${ZSDK_VERSION}
ENV ZEPHYR_SDK=${ZEPHYR_SDK_DIR}/zephyr-sdk-${ZSDK_VERSION}
ENV ZEPHYR_SDK_INSTALL_DIR=${ZEPHYR_SDK}
ENV CMAKE_PREFIX_PATH=${ZEPHYR_SDK_DIR}

# Install udev and git
RUN apt -y update && \
    apt -y install git curl && \
    apt -y install pre-commit
    
# install minimal Zephyr SDK
WORKDIR "${ZEPHYR_SDK_DIR}"
RUN wget ${WGET_ARGS} https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZSDK_VERSION}/zephyr-sdk-${ZSDK_VERSION}_linux-${HOSTTYPE}_minimal.tar.xz && \
    tar xf zephyr-sdk-${ZSDK_VERSION}_linux-${HOSTTYPE}_minimal.tar.xz && \
    rm zephyr-sdk-${ZSDK_VERSION}_linux-${HOSTTYPE}_minimal.tar.xz

# install toolchain and host tools
# https://docs.zephyrproject.org/latest/develop/toolchains/zephyr_sdk.html    
WORKDIR "${ZEPHYR_SDK}"
RUN ./setup.sh -t ${TOOLCHAIN} -h

RUN chown -R ${USERNAME}:${USERNAME} ${ZEPHYR_SDK_DIR}

# Run the Zephyr SDK setup script as 'user' in order to ensure that the
# `Zephyr-sdk` CMake package is located in the package registry under the
# user's home directory.
USER $USERNAME
WORKDIR /home/$USERNAME

RUN sudo -E -- bash -c ' \
    ${ZEPHYR_SDK}/setup.sh -c && \
    chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/.cmake'

ENV PATH="${ZEPHYR_SDK}/${TOOLCHAIN}/bin:${PATH}"
